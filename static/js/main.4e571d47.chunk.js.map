{"version":3,"sources":["Algorithms/BubbleSort.js","Algorithms/MergeSort.js","Algorithms/QuickSort.js","Components/Column.js","App.js","index.js"],"names":["BubbleSort","inputArr","arraySteps","colorSteps","array","len","length","colors","Array","fill","i","j","temp","push","MergeSort","QuickSort","steps","Column","columnStyle","height","this","props","value","backgroundColor","color","className","style","React","Component","BUBBLE_SORT","QUICK_SORT","MERGE_SORT","App","ALGO","sort","bind","setSteps","animateSteps","state","colorStep","algorithm","speed","generateArray","rand","Math","random","floor","setState","algo","setTimeout","columns","map","index","onClick","setAlgorithm","disabled","setLength","setSpeed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e571d47.chunk.js","sourcesContent":["const BubbleSort = (inputArr, arraySteps, colorSteps) => {\n    let array = [...inputArr];\n    let len = array.length;\n    let colors = new Array(len).fill(\"#A5E5D9\");\n    for (let i =0; i < len; i++) {\n        for (let j = 0; j < len - i - 1; j++) {\n            if (array[j] > array[j+1]) {\n                let temp = array[j];\n                array[j] = array[j+1];\n                array[j+1] = temp\n            }\n            colors[j] = \"gray\";\n            colors[j+1] = \"gray\";\n            arraySteps.push([...array]);\n            colorSteps.push([...colors]);\n            colors[j] = \"#A5E5D9\";\n            colors[j+1] = \"#A5E5D9\";\n        }\n        colors[len - i - 1] = \"green\";\n        colorSteps[-1] = colors;\n    }\n    colorSteps[colorSteps.length - 1] = new Array(len).fill(\"green\");\n};\n\nexport default BubbleSort;","export default function MergeSort(array) {\n  return;\n}","export default function QuickSort(array, steps) {\n    return;\n}","import React from 'react';\nimport './Column.css';\n\nexport default class Column extends React.Component {\n    render() {\n        let columnStyle = {\n            height: \"\" + (this.props.value*5) + \"px\",\n            backgroundColor: this.props.color\n        }\n\n        return(\n            <div className=\"column\" style={columnStyle}></div>\n        );\n    }\n}","import React from 'react';\nimport BubbleSort from './Algorithms/BubbleSort';\nimport MergeSort from './Algorithms/MergeSort';\nimport QuickSort from './Algorithms/QuickSort';\nimport './App.css';\nimport Column from './Components/Column';\n\nconst BUBBLE_SORT = 'BubbleSort';\nconst QUICK_SORT = 'QuickSort';\nconst MERGE_SORT = 'MergeSort';\nconst STARTING_LENGTH = 25;\nconst STARTING_SPEED = 1;\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sort = this.sort.bind(this);\n    this.setSteps = this.setSteps.bind(this);\n    this.animateSteps = this.animateSteps.bind(this);\n    this.state = {\n      array: [],\n      steps: [],\n      colors: [],\n      colorStep: [],\n      algorithm: BUBBLE_SORT,\n      length: STARTING_LENGTH,\n      speed: STARTING_SPEED,\n    }\n  }\n\n  ALGO = {\n    'BubbleSort': BubbleSort,\n    'QuickSort': QuickSort,\n    'MergeSort': MergeSort\n  };\n\n  componentDidMount() {\n    this.generateArray();\n  }\n\n  generateArray() {\n    let array = [];\n    let colorStep = [];\n    for (let i = 0; i < this.state.length; i++) {\n      let rand = Math.random()*50;\n      array.push(Math.floor(rand));\n      colorStep.push(\"#A5E5D9\");\n    }\n    this.setState({\n      array: array,\n      colorStep: [...colorStep]\n    }, () => this.setSteps());\n  }\n\n  setAlgorithm(algo) {\n    this.setState({\n      algorithm: algo\n    }, () => this.setSteps());\n  }\n\n  setLength(length) {\n    if (this.state.length !== length) {\n      this.setState({\n        length: length \n      }, () => {\n        this.generateArray(); \n        this.setSteps();\n      });\n    }\n  }\n\n  setSpeed(speed) {\n    this.setState({\n      speed: speed\n    });\n  }\n\n  setSteps() {\n    let array = this.state.array;\n    let steps = this.state.steps;\n    let colors = this.state.colors;\n\n    this.ALGO[this.state.algorithm](array, steps, colors);\n\n    this.setState({\n      steps: steps,\n      colors: colors\n    });\n  }\n\n  animateSteps() {\n    for (let i = 0; i < this.state.steps.length; i++) {\n      setTimeout(() => {\n        this.setState({\n          array: this.state.steps[i],\n          colorStep: this.state.colors[i]\n        });\n      }, (100/this.state.speed) * i);\n    }\n  }\n\n  sort() {\n    this.animateSteps();\n  }\n\n  render() {\n    let columns = this.state.array.map((value, index) => <Column\n      key={index}\n      value={value}\n      color={this.state.colorStep[index]}\n    />);\n    return (\n      <div className=\"App\">\n        <h1>Sorting Algorithm Visualizer</h1>\n        <div className=\"options\">\n          <div className=\"block algo\">\n            <h3>Algorithm</h3>\n            <button className={this.state.algorithm === BUBBLE_SORT ? 'active' : ''} onClick={() => this.setAlgorithm(BUBBLE_SORT)}>Bubble Sort</button>\n            <button className={this.state.algorithm === QUICK_SORT ? 'active' : ''} onClick={() => this.setAlgorithm(QUICK_SORT)} disabled>Quick Sort</button>\n            <button className={this.state.algorithm === MERGE_SORT ? 'active' : ''} onClick={() => this.setAlgorithm(MERGE_SORT)} disabled>Merge Sort</button>\n          </div>\n          <div className=\"block length\">\n            <h3>Size</h3>\n            <button className={this.state.length === 25 ? 'active' : ''} onClick={() => this.setLength(25)}>25</button>\n            <button className={this.state.length === 50 ? 'active' : ''} onClick={() => this.setLength(50)}>50</button>\n            <button className={this.state.length === 75 ? 'active' : ''} onClick={() => this.setLength(75)}>75</button>\n          </div>\n          <div className=\"block speed\">\n            <h3>Speed</h3>\n            <button className={this.state.speed === 1 ? 'active' : ''} onClick={() => this.setSpeed(1)}>1x</button>\n            <button className={this.state.speed === 2 ? 'active' : ''} onClick={() => this.setSpeed(2)}>2x</button>\n            <button className={this.state.speed === 3 ? 'active' : ''} onClick={() => this.setSpeed(3)}>3x</button>\n          </div>\n          <div className=\"block algo\">\n            <button onClick={this.generateArray.bind(this)}>Generate New Array</button>\n            <button onClick={this.sort}>Sort!</button>\n          </div>\n        </div>\n        <div className=\"columns\">\n            {columns}\n        </div>\n      </div>\n    );\n  }\n}  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}