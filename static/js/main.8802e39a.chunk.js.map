{"version":3,"sources":["Algorithms/BubbleSort.js","Algorithms/MergeSort.js","Algorithms/QuickSort.js","Components/Column.js","App.js","index.js"],"names":["BubbleSort","array","inputArr","len","length","steps","i","j","tmp","push","MergeSort","QuickSort","Column","columnStyle","height","this","props","value","className","style","React","Component","BUBBLE_SORT","QUICK_SORT","MERGE_SORT","App","ALGO","sort","bind","setSteps","animateSteps","state","algorithm","speed","generateArray","rand","Math","random","floor","setState","algo","setTimeout","columns","map","index","onClick","setAlgorithm","disabled","setLength","setSpeed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8802e39a.chunk.js","sourcesContent":["export default function BubbleSort(array) {\n    let inputArr = [...array];\n    let len = inputArr.length;\n    let steps = [];\n    for (let i = 0; i < len; i++) {\n        for (let j = 0; j < len; j++) {\n            if (inputArr[j] > inputArr[j + 1]) {\n                let tmp = inputArr[j];\n                inputArr[j] = inputArr[j + 1];\n                inputArr[j + 1] = tmp;\n            }\n            steps.push([...inputArr]);\n        }\n    }\n    return steps;\n}","export default function MergeSort(array) {\n  return;\n}","export default function QuickSort(array, steps) {\n    return;\n}","import React from 'react';\nimport './Column.css';\n\nexport default class Column extends React.Component {\n    render() {\n        let columnStyle = {\n            height: \"\" + (this.props.value*5) + \"px\"\n        }\n\n        return(\n            <div className=\"column\" style={columnStyle}></div>\n        );\n    }\n}","import React from 'react';\nimport BubbleSort from './Algorithms/BubbleSort';\nimport MergeSort from './Algorithms/MergeSort';\nimport QuickSort from './Algorithms/QuickSort';\nimport './App.css';\nimport Column from './Components/Column';\n\nconst BUBBLE_SORT = 'BubbleSort';\nconst QUICK_SORT = 'QuickSort';\nconst MERGE_SORT = 'MergeSort';\nconst STARTING_LENGTH = 25;\nconst STARTING_SPEED = 1;\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sort = this.sort.bind(this);\n    this.setSteps = this.setSteps.bind(this);\n    this.animateSteps = this.animateSteps.bind(this);\n    this.state = {\n      array: [],\n      steps: [],\n      algorithm: BUBBLE_SORT,\n      length: STARTING_LENGTH,\n      speed: STARTING_SPEED,\n    }\n  }\n\n  ALGO = {\n    'BubbleSort': BubbleSort,\n    'QuickSort': QuickSort,\n    'MergeSort': MergeSort\n  };\n\n  componentDidMount() {\n    this.generateArray();\n  }\n\n  generateArray() {\n    let array = []\n    for (let i = 0; i < this.state.length; i++) {\n      let rand = Math.random()*50;\n      array.push(Math.floor(rand));\n    }\n    this.setState({\n      array: array,\n    }, () => this.setSteps());\n  }\n\n  setAlgorithm(algo) {\n    this.setState({\n      algorithm: algo\n    }, () => this.setSteps());\n  }\n\n  setLength(length) {\n    if (this.state.length !== length) {\n      this.setState({\n        length: length \n      }, () => {\n        this.generateArray(); \n        this.setSteps();\n      });\n    }\n  }\n\n  setSpeed(speed) {\n    this.setState({\n      speed: speed\n    });\n  }\n\n  setSteps() {\n    let array = this.state.array;\n\n    let steps = this.ALGO[this.state.algorithm](array);\n\n    this.setState({\n      steps: steps\n    });\n  }\n\n  animateSteps() {\n    for (let i = 0; i < this.state.steps.length; i++) {\n      setTimeout(() => {\n        this.setState({\n          array: this.state.steps[i]\n        });\n      }, (100/this.state.speed) * i);\n    }\n  }\n\n  sort() {\n    this.animateSteps();\n  }\n\n  render() {\n    let columns = this.state.array.map((value, index) => <Column\n      key={index}\n      value={value}\n    />);\n    return (\n      <div className=\"App\">\n        <h1>Sorting Algorithm Visualizer</h1>\n        <div className=\"options\">\n          <div className=\"block algo\">\n            <h3>Algorithm</h3>\n            <button className={this.state.algorithm === BUBBLE_SORT ? 'active' : ''} onClick={() => this.setAlgorithm(BUBBLE_SORT)}>Bubble Sort</button>\n            <button className={this.state.algorithm === QUICK_SORT ? 'active' : ''} onClick={() => this.setAlgorithm(QUICK_SORT)} disabled>Quick Sort</button>\n            <button className={this.state.algorithm === MERGE_SORT ? 'active' : ''} onClick={() => this.setAlgorithm(MERGE_SORT)} disabled>Merge Sort</button>\n          </div>\n          <div className=\"block length\">\n            <h3>Size</h3>\n            <button className={this.state.length === 25 ? 'active' : ''} onClick={() => this.setLength(25)}>25</button>\n            <button className={this.state.length === 50 ? 'active' : ''} onClick={() => this.setLength(50)}>50</button>\n            <button className={this.state.length === 75 ? 'active' : ''} onClick={() => this.setLength(75)}>75</button>\n          </div>\n          <div className=\"block speed\">\n            <h3>Speed</h3>\n            <button className={this.state.speed === 1 ? 'active' : ''} onClick={() => this.setSpeed(1)}>1x</button>\n            <button className={this.state.speed === 2 ? 'active' : ''} onClick={() => this.setSpeed(2)}>2x</button>\n            <button className={this.state.speed === 3 ? 'active' : ''} onClick={() => this.setSpeed(3)}>3x</button>\n          </div>\n          <div className=\"block algo\">\n            <button onClick={this.generateArray.bind(this)}>Generate New Array</button>\n            <button onClick={this.sort}>Sort!</button>\n          </div>\n        </div>\n        <div className=\"columns\">\n            {columns}\n        </div>\n      </div>\n    );\n  }\n}  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}